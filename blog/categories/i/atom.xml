<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | 啊神的技术博客]]></title>
  <link href="http://ashen-zhao.github.io/blog/categories/i/atom.xml" rel="self"/>
  <link href="http://ashen-zhao.github.io/"/>
  <updated>2018-03-22T17:30:11+08:00</updated>
  <id>http://ashen-zhao.github.io/</id>
  <author>
    <name><![CDATA[Ashen]]></name>
    <email><![CDATA[zhaoashen@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[工具篇之自定义检查版本更新提示弹框]]></title>
    <link href="http://ashen-zhao.github.io/blog/2018/03/14/geng-xin/"/>
    <updated>2018-03-14T18:06:58+08:00</updated>
    <id>http://ashen-zhao.github.io/blog/2018/03/14/geng-xin</id>
    <content type="html"><![CDATA[<h3>引言</h3>

<p>对于一些app的更新弹框，使用系统自带的Alert弹框，文字排版总是对不齐，没有美观，像我这样有点强迫症的，看到都别扭，更别说去点击更新了，于是乎，就自己动手做了一个，不管怎么样，看着舒服多了。</p>

<h3>此处不废话，看效果</h3>

<p><img src="/images/checkUpdate.png" alt="" /></p>

<h3>使用</h3>

<p>由于这个工具开发过于简单，我这里就不讲述如何开发实现的了，想要看具体实现的，我已在github上公开源码（<a href="https://github.com/ashen-zhao/ZASUpdateAlert">ZASUpdateAlert</a>），可自行查看去吐槽。</p>

<!--more-->


<p>本着学习的态度，写了这个工具，又本着学习的态度，上传到了cocoapods上面，也是人生第一次上传代码到cocoapods，着实搞了一个下午，传了删，删了又传，最终也算是成功了。</p>

<p>鉴于我搞了半天才搞定如何上传自己的库到cocoapods，后续我会写一篇基础教材，到底该如何上传，同时也为自己以后再次使用时，少走坑，快速实现人生理想。</p>

<h4>CocoaPods安装</h4>

<pre><code>pod 'ZASUpdateAlert', '~&gt; 0.1.0'
</code></pre>

<h4>手动安装</h4>

<p>只需将<code>ZASUpdateAlert</code>文件夹拖到项目中。</p>

<h4>使用示例</h4>

<p>如果是使用的是CocoaPods，第一步需要先导入ZASUpdateAlert
<code>
import ZASUpdateAlert
</code></p>

<pre><code>ZASUpdateAlert.show(version: "V1.6", content: "1.全新UI界面\n2.更好的性能体验\n3.投诉系统极速反馈\n4.多个BUG虫的尸体都不复存在", appId: "xxxxxxxx", isMustUpdate: false)
</code></pre>

<h4>示例源代码</h4>

<p><a href="https://github.com/ashen-zhao/ZASUpdateAlert">点击查看ZASUpdateAlert源码去吐槽喽</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode修改版权Copyright、统一配置类前缀]]></title>
    <link href="http://ashen-zhao.github.io/blog/2017/12/01/copyright/"/>
    <updated>2017-12-01T13:51:07+08:00</updated>
    <id>http://ashen-zhao.github.io/blog/2017/12/01/copyright</id>
    <content type="html"><![CDATA[<h4>修改类的Copyright、类前缀</h4>

<p>对于已经在项目中的文件，想要修改版权信息，使用全局替换就可以了，而对于新文件来说，想让Xcode帮你自动填充版权方，也是很方便的，之前都是傻瓜式的替换，现在发现了新大陆，就来这里记录下吧，具体操作流程如下图：<br/>
<img src="/images/copyright.png" alt="版权、前缀" /></p>

<p>顺便加点料，对于有些项目，需要为每个类加一个前缀，也是可以按照这个流程来做的，设置上图中的<code>Class prefix</code>就可以了，这样Xcode会在新建的类的时候自动填充这个前缀了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[React-Native初体验]]></title>
    <link href="http://ashen-zhao.github.io/blog/2017/08/23/react-native/"/>
    <updated>2017-08-23T17:25:41+08:00</updated>
    <id>http://ashen-zhao.github.io/blog/2017/08/23/react-native</id>
    <content type="html"><![CDATA[<h3>我的学习之React-Native</h3>

<p>练习项目：<a href="https://github.com/ashen-zhao/react-native">https://github.com/ashen-zhao/react-native</a></p>

<h4>目前还在学习阶段，日后有时间有精力了，再来补充这篇文章吧（偷笑中），又来欺骗自己了，啥时候来补充呀，这个还真不知道呀，谁让咱都是性情中人呢。</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode代码全黑的另一种解决办法]]></title>
    <link href="http://ashen-zhao.github.io/blog/2017/07/14/xcodedai-ma-quan-hei/"/>
    <updated>2017-07-14T16:44:48+08:00</updated>
    <id>http://ashen-zhao.github.io/blog/2017/07/14/xcodedai-ma-quan-hei</id>
    <content type="html"><![CDATA[<h4>Xcode代码全黑且没有智能提示，应该算是开发中最烦恼的事之一了吧，一旦遇到这样问题，之前除了Clean项目，删除DerivedData文件夹，然而这样并没有什么用，偶尔重启Xcode或许运气好的话，彩色世界就会回来了。</h4>

<h4>运气为什么好就能回来了，联想到Xcode比较吃内存，在联想到我苦逼的4g内存，估计Xcode代码全黑，可内存有联系呀，瞬间茅塞顿开呀，赶紧打开活动监视器，看到占用内存最多的 SourceKitService，大概百度了下SourceKitService这个进程，也没发现有什么比较严重的东东，就退出SourceKitService这个进程，回到Xcode发现，代码不再是全黑了，又回到彩色世界了，世界又是那么的美好，编程也变得快乐了</h4>

<h4>总结，Xcode代码全黑的另一种解决办法，就是打开活动监视器，退出SourceKitService进程，就可以了。</h4>

<p>注：可能只针对内存比较小的电脑（另外：我的项目是swift项目）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UITableView重用机制导致CABasicAnimation动画失效]]></title>
    <link href="http://ashen-zhao.github.io/blog/2017/03/02/dong-hua-shi-xiao/"/>
    <updated>2017-03-02T18:24:49+08:00</updated>
    <id>http://ashen-zhao.github.io/blog/2017/03/02/dong-hua-shi-xiao</id>
    <content type="html"><![CDATA[<p>开发随记，再给cell上添加一个小动画图片时，遇到一个很蛋疼的问题，动画明明会动，而且退出后台在回来也会动，可就是拉出屏幕外，在回来时，动画失效了，不会动了。以下是动画代码，就是一个简单的摇摆动画</p>

<pre><code>let rotationAnim = CABasicAnimation(keyPath: "transform.rotation.z")
            rotationAnim.toValue = M_PI/5
            rotationAnim.autoreverses = true
            rotationAnim.repeatCount = MAXFLOAT
            rotationAnim.duration = 0.2
            rotationAnim.isRemovedOnCompletion = false
            moveImgv.layer.add(rotationAnim, forKey: nil)
</code></pre>

<!--more-->


<p>于是就开始看CABasicAnimation的类的属性说明，该设置的都设置了，可还是不行，百度，谷歌，搜狗统统找不到原因，全是CABasicAnimation的简单教程。</p>

<p>无奈至极呀，就开始检查代码，看有没有可以修改的地方，一通乱世只会，在上面代码中的最后一行<br/>
<code>moveImgv.layer.add(rotationAnim, forKey: nil)</code></p>

<p>我发现forkey是nil，可当我给它一个值的时候，</p>

<p><code>moveImgv.layer.add(rotationAnim, forKey: "moveanimation")</code><br/>
再次调试，却发现重用后，动画终于可以动了，原来我废了那么久的时间，却是这样的问题，真是想哭，又想笑😁。</p>

<p>就是这样的问题，在网上找了好久，却找不到结果，可能是大家都写了key了吧，在此写下这边文章，希望有遇到像我一样的问题的同学可以找到解决办法。</p>
]]></content>
  </entry>
  
</feed>
